@page "/"
@using MovieBioApp.Models
@using MovieBioApp.Data.MovieService
@using MovieBioApp.Data.OMDbAPI
@inject NavigationManager UriHelper


<div class="align-content-center">
    <div>
        <div id="carouselControls" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img @onclick="@(e => imageclicked(1877830))" class="d-block w-100" src="https://www.thebatman.com/images/share.jpg" alt="First slide">
                </div>
                <div class="carousel-item">
                    <img @onclick="@(e => imageclicked(11245972))" class="d-block w-100" src="https://wickedhorror.com/wp-content/uploads/2022/04/Scream-2022.jpg" alt="Second slide">
                </div>
                <div class="carousel-item">
                    <img @onclick="@(e => imageclicked(293429))" class="d-block w-100" src="https://prod.cdn.bbaws.net/TDC_Blockbuster_-_Production/928/652/WB-6000148141_bd-w-superhigh_orig-1621327254736.jpg" alt="Third slide">
                </div>
            </div>
            <a class="carousel-control-prev" href="#carouselControls" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselControls" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
    <div>
        <h3>Featured Today</h3>
        <div>
        @if (featuredMovies != null && featuredMoviesOMDB != null)
        {
            @foreach (Movie m in featuredMovies)
            {
                <img @onclick="@(e => imageclicked(m.MovieId))" src=@featuredMoviesOMDB[m.MovieId].image alt="Featured movie has no image" width="10%">
            }
        }
        </div>
    </div>
</div>


@code {
    Dictionary<int,OMDbAPIObj> featuredMoviesOMDB;
    MovieService movieService = new MovieService();
    List<Movie> featuredMovies;
    IOMDbAPIService OmDbApiService;
    List<OMDbAPIObj> newMovies;
    
    protected override async Task OnInitializedAsync()
    {
        newMovies = new List<OMDbAPIObj>();
        featuredMovies = new List<Movie>();
        featuredMoviesOMDB = new Dictionary<int, OMDbAPIObj>();
        OmDbApiService = new OMDbAPIService();
        Random random = new Random();
        int num = 0;
        char let;
        
        for (int i = 0; i < 6; i++)
        {
            try
            {
                num = random.Next(0, 26);
                let = (char) ('a' + num);
                Movie randomMovie = await movieService.GetMovieByRandChar(let);
                Decimal d = Decimal.Parse(randomMovie.Year.ToString());
                featuredMoviesOMDB.Add(randomMovie.MovieId, await OmDbApiService.GetOMDbAPIMovie(randomMovie.MovieTitle, d));
                featuredMovies.Add(randomMovie);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
    }

    void imageclicked(int id)
    {
        UriHelper.NavigateTo("MoviePage/"+ id);
    }
    
    

}