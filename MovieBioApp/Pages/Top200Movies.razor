@page "/Top200Movies"
@using System.Collections
@using MovieBioApp.Data
@using MovieBioApp.Data.MovieService
@using MovieBioApp.Data.OMDbAPI
@using MovieBioApp.Models

@inject NavigationManager UriHelper;
@inject IMovieService MovieService;

    @if (top20Movies == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <div class="container paddingRemove">
            <div class="row">
                <div class="col-md-12">
                    <h3>Top 20 Movies</h3>
                </div>
            </div>
            <div class="row rowStyle">
                <div class="col-md-2">Title</div>
                <div class="col-md-2">Genre</div>
                <div class="col-md-2">Rating</div>
                <div class="col-md-2">Director</div>
                <div class="col-md-2">Star Actor</div>
                <div class="col-md-2">Picture</div>
            </div>

                
            @foreach (Movie movie in top20Movies)
            {
                
                <div class="row rowBorder">
                    <div class="col-md-2">
                        <div>@movie.MovieTitle</div>
                    </div>
                
                    <div class="col-md-2">
                        <div>@movie.Year</div>
                    </div>
                
                    <div class="col-md-2">
                        <div>@movie.Rating</div>
                    </div>
                
                    <div class="col-md-2">
                        <div>@foreach (string director in movie.Director)
                             {
                                 <p>@director</p>
                             }</div>
                    </div>
                
                    <div class="col-md-2">
                        <div>@omdbDict[movie.MovieTitle+movie.Year].actors</div>
                    </div>
                
                    <div class="col-md-2">
                        <div>
                            @if (omdbDict[movie.MovieTitle + movie.Year].image != null || omdbDict[movie.MovieTitle + movie.Year].image != "")
                            {
                                <img @onclick="@(e => movieImageclicked(movie.MovieId))" src="@omdbDict[movie.MovieTitle + movie.Year].image" alt="No image for this movie" width="100%">
                            }
                            else
                            {
                                <img @onclick="@(e => movieImageclicked(movie.MovieId))" src="https://www.prokerala.com/movies/assets/img/no-poster-available.jpg" alt="No image for this movie" width="100%">
                            }
                        </div>
                    </div>
                </div>
                
            }
        </div> 
    }




@code {
    string username = "test";
    List<Movie> top20Movies;
    IOMDbAPIService OmDbApiService = new OMDbAPIService();
    Dictionary<string, OMDbAPIObj> omdbDict;
    MovieService movieInfoService;
    protected override async Task OnInitializedAsync()
    {
        MovieService = new MovieService();
        omdbDict = new Dictionary<string, OMDbAPIObj>();
        top20Movies = await MovieService.GetTop200Movies();
        
        foreach (Movie movie in top20Movies)
        {
            omdbDict.Add(movie.MovieTitle+movie.Year, await OmDbApiService.GetOMDbAPIMovie(movie.MovieTitle, movie.Year));
        }
        
    }
    
    void movieImageclicked(int id)
    {
        UriHelper.NavigateTo("MoviePage/"+ id);
    }
}