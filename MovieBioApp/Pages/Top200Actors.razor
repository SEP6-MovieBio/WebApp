@page "/Top200Actors"
@using System.Collections
@using MovieBioApp.Data
@using MovieBioApp.Data.PeopleService
@using MovieBioApp.Data.TMDBAPI
@using MovieBioApp.Models.ClassesToReadJson
@if (top20Actors == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
else
{
<div class="container paddingRemove">
    <div class="row">
        <div class="col-md-12">
            <h3>Top 200 Actors</h3>
        </div>
    </div>
    <div class="row rowStyle">
        <div class="col-md-4">Name</div>
        <div class="col-md-2">Rating</div>
        <div class="col-md-2">Age</div>
        <div class="col-md-2">Known For</div>
        <div class="col-md-2">Picture</div>
    </div>
    @foreach (Actor actor in top200Actors)
        {
            <div class="row rowBorder">
                <div class="col-md-4">
                    <div>@actor.Name</div>
                </div>
                <div class="col-md-2">
                    <div>@actor.Rating</div>
                </div>

                <div class="col-md-2">
                    <div>@actor.Age</div>
                </div>

                <div class="col-md-2">
                    <div><img src="https://image.tmdb.org/t/p/original/@tmdbapiObj[actor.id].results[0].known_for[0].poster_path" alt="No image for this movie" width="100%"></div>
                </div>

                <div class="col-md-2">
                    <div><img src="https://image.tmdb.org/t/p/original/@tmdbapiObj[actor.id].results[0].profile_path" alt="No image for this Actor" width="100%"></div>
                </div>
            </div>
        }
</div>
}



@code {
    string username = "test";
    List<Actor> top200Actors;
    List<Actor> top20Actors;
    ITMDBAPI TMDBAPI = new TMDBAPI();
    Dictionary<int, Result> tmdbapiObj;
    IPeopleService peopleService;
    protected override async Task OnInitializedAsync()
    {
        top200Actors = new List<Actor>();
        peopleService = new PeopleService();
        tmdbapiObj = new Dictionary<int, Result>();
        top200Actors = await peopleService.GetTop20Actors();
        top20Actors = new List<Actor>();
        
        foreach (Actor actor in top200Actors)
        {
            {
                tmdbapiObj.Add(actor.id, await TMDBAPI.GetPersonById(actor.Name));
                top20Actors.Add(actor);
            }
        }
        

    }    
    
    
}