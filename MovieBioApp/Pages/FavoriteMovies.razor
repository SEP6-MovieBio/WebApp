@page "/FavoriteMovies/{value}"
@using System.Collections
@using MovieBioApp.Data
@using MovieBioApp.Data.OMDbAPI
@using MovieBioApp.Data.UserService
@using MovieBioApp.Models

@inject IUserInfoService UserInfoService;



<div class="container paddingRemove">
    <div class="row">
        <div class="col-md-12">
            <h3>Favorite Movies</h3>
        </div>
    </div>
    <div class="row rowStyle">
        <div class="col-md-2">Title</div>
        <div class="col-md-2">Genre</div>
        <div class="col-md-2">Rating</div>
        <div class="col-md-2">Director</div>
        <div class="col-md-2">Star Actor</div>
        <div class="col-md-2">Picture</div>
    </div>
    @if (_favoriteMovies == null || _omdbDict == null)
    {
        <p>Loading...</p>
    }
    else
    {
        foreach (Movie movie in _favoriteMovies)
        {
            <div class="row rowBorder">
                <div class="col-md-2">
                    <div>@movie.MovieTitle</div>
                </div>
                
                <div class="col-md-2">
                    <div>@_omdbDict[movie.MovieTitle].genre</div>
                </div>
                
                <div class="col-md-2">
                    <div>@movie.Rating</div>
                </div>
                
                <div class="col-md-2">
                    <div>@foreach (string director in movie.Director)
                         {
                             <p>@director</p>
                         }
                        </div>
                </div>
                
                <div class="col-md-2">
                    <div>@_omdbDict[movie.MovieTitle].actors</div>
                </div>
                
                <div class="col-md-2">
                    <div><img src="@_omdbDict[movie.MovieTitle].image" alt="No image for this movie" width="100%"></div>
                </div>
            </div>
        }
        
    }
</div>
    
    



@code {
    [Parameter]
    public string value { get; set; }

    private string _username = "";
    
    List<Movie> _favoriteMovies;
    IOMDbAPIService _omDbApiService = new OMDbAPIService();
    Dictionary<string, OMDbAPIObj> _omdbDict;
    //UserInfoService UserInfoService;

    protected override async Task OnInitializedAsync()
    {
        _username = value;
        _favoriteMovies = new List<Movie>();
        //UserInfoService = new UserInfoService();
        _omdbDict = new Dictionary<string, OMDbAPIObj>();
        _favoriteMovies = await UserInfoService.GetFavoriteMovies(_username);
        foreach (Movie m in _favoriteMovies)
        {
            _omdbDict.Add(m.MovieTitle, await _omDbApiService.GetOMDbAPIMovie(m.MovieTitle, m.Year));
        }
    }

}